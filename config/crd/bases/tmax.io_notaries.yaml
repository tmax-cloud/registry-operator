
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.3.0
  creationTimestamp: null
  name: notaries.tmax.io
spec:
  additionalPrinterColumns:
  - JSONPath: .metadata.creationTimestamp
    name: AGE
    type: date
  group: tmax.io
  names:
    kind: Notary
    listKind: NotaryList
    plural: notaries
    shortNames:
    - not
    singular: notary
  scope: Namespaced
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      description: Notary is the Schema for the notaries API
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          description: NotarySpec defines the desired state of Notary
          properties:
            authConfig:
              description: Settings for registry authentication config
              properties:
                issuer:
                  type: string
                realm:
                  type: string
                service:
                  type: string
              required:
              - issuer
              - realm
              - service
              type: object
            persistentVolumeClaim:
              properties:
                create:
                  description: Create new pvc
                  properties:
                    accessModes:
                      description: 'Each PV''s access modes are set to the specific
                        modes supported by that particular volume. Ref: https://kubernetes.io/docs/concepts/storage/persistent-volumes/#access-modes
                        You can choose ReadWriteOnce, ReadOnlyMany and ReadWriteMany'
                      items:
                        enum:
                        - ReadWriteOnce
                        - ReadWriteMany
                        type: string
                      type: array
                    deleteWithPvc:
                      description: 'Delete the pvc as well when this registry is deleted
                        (default: false)'
                      type: boolean
                    storageClassName:
                      description: StorageClassName like "csi-cephfs-sc"
                      type: string
                    storageSize:
                      description: Desired storage size like "10Gi"
                      type: string
                  required:
                  - accessModes
                  - storageClassName
                  - storageSize
                  type: object
                exist:
                  description: Use exist pvc
                  properties:
                    pvcName:
                      description: PVC's name you have created
                      type: string
                  required:
                  - pvcName
                  type: object
              type: object
            rootCASecret:
              description: 'INSERT ADDITIONAL SPEC FIELDS - desired state of cluster
                Important: Run "make" to regenerate code after modifying this file
                Root CA certificate secret for notary'
              type: string
            serviceType:
              description: Service type to expose notary
              enum:
              - Ingress
              - LoadBalancer
              type: string
          required:
          - authConfig
          - persistentVolumeClaim
          - rootCASecret
          - serviceType
          type: object
        status:
          description: NotaryStatus defines the observed state of Notary
          properties:
            conditions:
              description: Conditions is a set of Condition instances.
              items:
                description: "Condition represents an observation of an object's state.
                  Conditions are an extension mechanism intended to be used when the
                  details of an observation are not a priori known or would not apply
                  to all instances of a given Kind. \n Conditions should be added
                  to explicitly convey properties that users and components care about
                  rather than requiring those properties to be inferred from other
                  observations. Once defined, the meaning of a Condition can not be
                  changed arbitrarily - it becomes part of the API, and has the same
                  backwards- and forwards-compatibility concerns of any other part
                  of the API."
                properties:
                  lastTransitionTime:
                    format: date-time
                    type: string
                  message:
                    type: string
                  reason:
                    description: ConditionReason is intended to be a one-word, CamelCase
                      representation of the category of cause of the current status.
                      It is intended to be used in concise output, such as one-line
                      kubectl get output, and in summarizing occurrences of causes.
                    type: string
                  status:
                    type: string
                  type:
                    description: "ConditionType is the type of the condition and is
                      typically a CamelCased word or short phrase. \n Condition types
                      should indicate state in the \"abnormal-true\" polarity. For
                      example, if the condition indicates when a policy is invalid,
                      the \"is valid\" case is probably the norm, so the condition
                      should be called \"Invalid\"."
                    type: string
                required:
                - status
                - type
                type: object
              type: array
            notaryURL:
              type: string
            serverClusterIP:
              type: string
            serverLoadBalancerIP:
              type: string
            signerClusterIP:
              type: string
            signerLoadBalancerIP:
              type: string
          type: object
      type: object
  version: v1
  versions:
  - name: v1
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
